#! /bin/bash
export ABPF=/usr
export ABLE=$ABPF/lib/autobuild
# ARCH=amd64 # For better cross-arch: try ARCH="`uname -m`" But be careful with amd64 and x86_64 ...
             # From what I can see it only returns in x86_64 so here I would try to have a translation going...
             # 
             # I just made up my mind to check in a file.
             # Like so...
ARCH="`cat /etc/arch`"
# Please include /etc/arch in ANY OS3 Distros.
MTER="`cat /etc/maintainer`"
export ABTGTPM="`cat /etc/pm`"
# Please include /etc/pm in ANY OS3 Distros, for autobuild to determine Package Manager,
# Or not, just output two copies of packages anyway...

export DPKGDEBFLAGS="-Zxz -z6" # extreme for amd64!
                               # Reverted, it only makes installation of packages slower and may hang some older machine.
                               # Note that we are making distro for everyone.
# TODO: xz benchmark
export configure=configure
if [ "x$PYTHON" = "x" ]
then
	export PYTHON=/usr/bin/python
fi

if [ -e $ABLE/functions ]
then
	. $ABLE/functions
else
	echo "Installation not full!"
	exit 1
fi

if [ ! -d autobuild ]
then
	echo "autobuild directory doesn't exist man... relax... ^O^"
	# what's the point for the emotion character...
	exit 1
fi

if [ -e autobuild/defines ]
then
	. autobuild/defines
	[ $PKGDES = "" ] && PKGDES="$PKGDESC" # Be PKGBUILD-user-friendly
else
	echo "No autobuild/defines :-("
	exit 1
fi

# get necessary dependencies defined in define before build
# BUILDDEP+PKGDEP=***REAL*** Needed stuff.
if dpkg -l $BUILDDEP $PKGDEP
then
        true
else
        apt-get update 
        apt-get install $BUILDDEP $PKGDEP --yes
fi

if [ "x$ABTYPE" = "x" ]
then
	export ABTYPE="`detect_type`"
fi

if [ -e autobuild/patch ]
then
	if [ ! -e .patch ]
	then
		. autobuild/patch
		touch .patch
	fi
fi

if autobuild_$ABTYPE
then
	:
else
	echo "Build failed..."
	exit 1
fi

# QA call.

. $ABLE/autobuild_qa-check

if [ ! -d abdist ]
then
	echo No abdist ^o^
	exit 1
fi

if [ -d autobuild/override ]
then
	cp -r --preserve=all autobuild/override/* abdist
fi

if [ -e autobuild/beyond ]
then
	. autobuild/beyond
fi

# Begin plugins

# Remove dir

rm -f abdist/usr/share/info/dir
rm -f abdist/usr/info/dir

# remove Perl info

rm -f /usr/lib/perl5/*/perllocal.pod
rm -f /usr/lib/perl5/*/*/perllocal.pod

# End plugins

if [ ! -e autobuild/subpkgs ]
then

MTER=$MTER ARCH=$ARCH configure=$configure PKGNAME=$PKGNAME PKGVER=$PKGVER PKGDEP=$PKGDEP PKGSEC=$PKGSEC PKGDES=$PKGDES PKGCONFL=$PKGCONFL PKGRECOM=$PKGRECOM PKGREP=$PKGREP PKGPROV=$PKGPROV PKGBREAK=$PKGBREAK gen_control

# Hey Icenowy, are these all needed anyway?
touch abdist/DEBIAN/postinst
chmod 755 abdist/DEBIAN/postinst

touch abdist/DEBIAN/prerm
chmod 755 abdist/DEBIAN/prerm

alternative(){
	while [ "x$1" != "x" ]
	do
		echo "update-alternatives --install $1 `basename $1` $2 $3 " >> abdist/DEBIAN/postinst
		echo "update-alternatives --remove `basename $1` $2" >> abdist/DEBIAN/prerm
		# Funny code here...
		shift
		shift
		shift
	done
}

if [ -e autobuild/alternatives ]
then
	. autobuild/alternatives
fi

chmod a-s abdist/DEBIAN

dpkg-deb $DPKGDEBFLAGS -b abdist ${PKGNAME}.deb && dpkg -i ${PKGNAME}.deb && tar -cvJf ${PKGNAME}_${PKGVER}.tar.xz ./autobuild

fi
