#! /bin/bash
export ABPF=/usr
export ABLE=$ABPF/lib/autobuild
ARCH=amd64
# ARCH="`cat /etc/arch`"
# Please include /etc/arch in ANY OS3 Distros.
MTER="$(cat /etc/maintainer || echo 'Unknown UNKNOWN <unknown@unknown.unknown>')"
export ABTGTPM=dpkg
export DPKGDEBFLAGS="-Zxz -z9 -Sextreme" 
export configure=configure
export SRCDIR="$PWD"
export PKGDIR="$PWD/abdist"
die(){ echo "$1">&2; exit ${2-1}; }
if [ "x$PYTHON" = "x" ]
then
	export PYTHON=/usr/bin/python
fi

if [ -e $ABLE/functions ]
then
	. $ABLE/functions
else
	die "Installation not full!"
fi

if [ ! -d autobuild ]
then
	die "autobuild directory doesn't exist man... relax... ^O^"
	# what's the point for the emotion character...
fi

if [ -e autobuild/defines ]
then
	. autobuild/defines
	[ "$PKGDES" ] || PKGDES="$PKGDESC" # Be PKGBUILD-user-friendly
else
	die "No autobuild/defines :-("
fi

if [ "$configure" != "configure" ]; then ABSHADOW=no; ABTYPE=autotools; fi
[[ "$PKGNAME" =~ +32$ ]] && BUILDDEP+=' 32subsystem'

# get necessary dependencies defined in define before build
# BUILDDEP+PKGDEP=***REAL*** Needed stuff.
if ! dpkg -l $BUILDDEP $PKGDEP
then
        apt-get update 
        apt-get install $BUILDDEP $PKGDEP --yes
fi

if [ "x$ABTYPE" = "x" ]
then
	export ABTYPE="`detect_type`"
fi

if [ -e autobuild/patch ] && [ ! -e .patch ]
then
  . autobuild/patch
  cd $SRCDIR
  touch .patch
fi

autobuild_$ABTYPE || die "Build failed..."

if [ $LICENSE == yes ] && [ -e LICENSE ] || mv COPYING LICENSE
then
	mkdir -p abdist/usr/share/licenses/${PKGNAME}
	cp COPYING abdist/usr/share/licenses/${PKGNAME}/LICENSE
fi

# QA call.
touch abdist/DEBIAN/{postinst,prerm}

. $ABLE/autobuild_qa-check

# Backported elf strip.
. $ABLE/autobuild_elf

[  -d abdist ] || die 'No abdist ^o^'

# Backport the overrides, which can be later overwritten easily.
[ -d autobuild/overrides ] && cp -a autobuild/overrides/* abdist
# abscript TODO.

if [ -d autobuild/override ]
then
	cp -a autobuild/override/* abdist
fi

if [ -e autobuild/beyond ]
then
	. autobuild/beyond
fi

cd $SRCDIR

# Begin plugins

# Remove dir

rm -f abdist/usr/share/info/dir
rm -f abdist/usr/info/dir

# remove Perl info

rm -f /usr/lib/perl5/*/perllocal.pod
rm -f /usr/lib/perl5/*/*/perllocal.pod

# End plugins

if [ ! -e autobuild/subpkgs ]
then

MTER=$MTER ARCH=$ARCH configure=$configure PKGNAME=$PKGNAME PKGVER=$PKGVER PKGDEP=$PKGDEP PKGSEC=$PKGSEC PKGDES=$PKGDES PKGCONFL=$PKGCONFL PKGRECOM=$PKGRECOM PKGREP=$PKGREP PKGPROV=$PKGPROV PKGBREAK=$PKGBREAK gen_control

alternative(){
	while [ "x$1" != "x" ]
	do
		echo "update-alternatives --install $1 `basename $1` $2 $3 " >> abdist/DEBIAN/postinst
		echo "update-alternatives --remove `basename $1` $2" >> abdist/DEBIAN/prerm
		# Funny code here...
		shift 3
	done
}

if [ -e autobuild/alternatives ]
then
	. autobuild/alternatives
fi

chmod a-s abdist/DEBIAN

PKGVER=$(echo "$PKGVER" | sed "s/:/_/g" -)
dpkg-deb $DPKGDEBFLAGS -b abdist ${PKGNAME}.deb && dpkg -i ${PKGNAME}.deb && tar -cvJf ${PKGNAME}_${PKGVER}.tar.xz ./autobuild

fi
