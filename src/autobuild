#! /bin/bash
export ABPF=/usr
export SRCDIR="$PWD" PKGDIR="$PWD/abdist"
export PYTHON=${PYTHON=/usr/bin/python}
export LANG=C
ABLE=$ABPF/lib/autobuild
ARCH=amd64
MTER="$(cat /etc/maintainer || echo 'Unknown UNKNOWN <unknown@unknown.moe>')"
ABPM=dpkg
die(){ echo -ne '\n\e[31m'; echo "$1">&2; echo -ne '\e[0m'; exit ${2-1}; }
shopt -s expand_aliases extglob

# Where are we?
if [ ! -d $ABLE ]
then
	echo "Autobuild installation not found. Using selfâ€¦"
	export ABPF=$(dirname $0)
	ABLE=$ABPF/lib
fi
export ABLE

# integrity check
. $ABLE/base || die "autobuild base function import failed"
_ab_plug base
. $ABLE/$ABPM || die "$ABPM packing function import failed"
_ab_plug pkgm $ABPM

[ -d autobuild ] || die "autobuild directory doesn't exist. =w="

if [ -e autobuild/defines ]
then
	. autobuild/defines
	[ "$PKGDES" ] || PKGDES="$PKGDESC" # Be PKGBUILD-user-friendly
	varcheck PKG{NAME,VER,DES} || die "Package info $vchk missing."
else
	die "No autobuild/defines :-("
fi
_ab_plug define

if [ "$configure" != "configure" ]; then ABSHADOW=no; ABTYPE=autotools; fi
[[ "$PKGNAME" =~ +32$ ]] && BUILDDEP+=' 32subsystem'

# get necessary dependencies defined in define before build
# BUILDDEP+PKGDEP=***REAL*** Needed stuff.
getdep $BUILDDEP $PKGDEP || die 'Unable to resolve deps.'
_ab_plug deps

if [ -e autobuild/patch ] && [ ! -e .patch ]
then
  . autobuild/patch
  cd $SRCDIR
  touch .patch
fi
_ab_plug patch

build_${ABTYPE=$(detect_type)} || die "Build failed..."

if [ $LICENSE == yes ] && [ -e LICENSE ] || mv COPYING LICENSE
then
	mkdir -p abdist/usr/share/licenses/${PKGNAME}
	cp COPYING abdist/usr/share/licenses/${PKGNAME}/LICENSE
fi
_ab_plug build
[ -d abdist ] || die 'No abdist generated from build.'

# Backport the overrides
[ -d autobuild/overrides ] && cp -la autobuild/override{,s}

[ -e autobuild/conffiles ] || mv autobuild/{override/DEBIAN/,}conffiles

# abscript basics.
mkdir abscripts
for i in {post,pre}{inst,rm}; do
	[ -e autobuild/$i ] || mv autobuild/{override/DEBIAN/,}$i || echo "#! /bin/bash" > abscripts/$i
	cat autobuild/$i >> abscripts/$i 2>/dev/null || echo "Creating empty $i."
	chmod 755 abscripts/$i
done

if [ -d autobuild/override ]
then
	cp -a autobuild/override/* abdist
	_ab_plug run_override
fi
_ab_plug override

if [ -e autobuild/beyond ]
then
	. autobuild/beyond
	_ab_plug run_beyond
fi

cd $SRCDIR
_ab_plug beyond

[ -e autobuild/subpkgs ] && exit

if [ -e autobuild/alternatives ]
then
	. autobuild/alternatives
fi

chmod a-s abdist/DEBIAN

pack && ${ARCHIVE-true} && tar -cvJf ${PKGNAME}_${PKGVER//:/_}.tar.xz ./autobuild

_ab_plug pack
